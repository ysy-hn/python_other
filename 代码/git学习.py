# 第一节：名称简介
# 仓库：repository；存放项目的仓库。
# 收藏：star；收藏项目，方便下次直接查看。
# 复制：fork；复制项目。
# 发出请求：pull request；向他人请求，需要他人同意。
# 关注：watch；项目更新时，接收通知等。
# 事务卡片：issue；发现bug，暂未更新，讨论时使用。
# github主页：左侧展示用户动态信息以及仓库动态，右侧展示所有的仓库。见1.jpg图片。
# 仓库主页：展示项目的信息，收藏、关注、fork等信息。
# 个人主页：个人信息，头像，关注的人，关注的项目、仓库等信息展示。
# 进入个人主页：点击用户名、右侧下拉框（点击your profile）。

# 注意项：
# 1、服务器在国外，访问较慢或无法访问，须翻墙（shadowsocks）；
# 2、私有仓库，需收费，拥有权限设置；
# 3、新注册的用户必须验证邮箱后才可以创建git库仓库。
# 4、QQ邮箱需要设置白名单才能收到邮件：
# 打开qq邮箱，点击设置->反垃圾->设置域名白名单->在新页面的input框中输入github.com添加即可。

# 第二节：基础操作：
# 仓库主页各解释见2.jpg、3.jpg图片。
# 创建文件：点击create new file，创建新文件，添加文件名、文件内容，文件简单描述、文件详细描述。
# 编辑文件：点击文件名，到详情页编辑；点击描述可查看提交详细信息。
# 查看删除文件：点击commits（修改提交变更记录），即可查看。
# 搜索文件：点击find file，再输入搜索文件名，即可。
# 上传文件：点击upload->可以将要上传的文件拖到上传区域或点击choose your files直接选择文件可多选。
# 下载文件：点击clone or download，选择下载压缩包。
# 创建issue：点击issue->点击右侧的new issue；填写要讨论的内容。
# 查看issue，建议、bug等信息，bug有用或还不错，回复感谢，再关闭issue；审核后再决定是否合到原代码中。

# 第三节：流程和安装：
# 开源项目流程：
# 1、新建Issue，提交使用问题、建议、想法、bug等
# 2、pull request，步骤：1、fork项目；2、修改自己仓库的项目代码；3、新建pull request；4、等待作者操作审核。
#
# 安装git步骤：
# 1、官网下载：https://www.git-scm.com/download/win
# 2、双击安装；
# 3、选择安装的工作目录；
# 4、见4.jpg
# 5、开始菜单目录名设置；
# 6、选择命令行环境；
# 7、以下3步默认，直接next；
# 8、等待安装。

# 第四节：
# git工作区域：
# 工作区（working directory）：添加、编辑、删除文件等动作。
# 暂存区：暂存已经修改的文件最后统一提交到git仓库中。
# git repository（git仓库）：最终确定的文件保存到仓库，成为一个新的版本，并对他人可见。
# 流程见5.jpg图片。

# git基础设置：
# 安装完成后，需进行基础信息设置。
# 1、设置用户名：git config --global user.name '用户名'
# 2、设置邮箱：git config --global user.email '邮箱'
# 3、查看邮箱： git config --list

# 初始化新的git仓库：mkdir 仓库名（创建仓库文件夹）
# 在文件内初始化git：cd 仓库名（跳转到仓库文件中）；git init（初始化）；出现.git文件说明初始化成功。

# 1、touch 文件（创建文件）
# 2、git status（查看状态）
# 3、git add 文件名（添加到暂存区）
# 4、git commit -m ‘描述’（添加到仓库b并描述）
# 5、vi 文件名（修改文件）
# 6、rm 文件名（删除文件）
# 7、git rm 文件名（删除git中的文件）

# 删除git中的文件三步走：
# 1、rm -rf 文件名
# 2、git rm 文件名
# 3、git commit -m '描述'

# 第六节
# 使用远程仓库的目的：备份，实现代码共享集中化管理。见6.jpg图片。
# git push 将本地仓库提交到远程。
# 为什么无法同步？见8.jpg图片。

# 使用git克隆的目的：将远程仓库复制到本地。
# git clone '仓库地址'。仓库地址，见7.jpg图片。
# 会直接将git的项目下载到本地中。
# 一个整体流程：见9.jpg图片。

# 第七节
# 创建个人站点：
# 1、访问：https://用户名.github.io
# 2、搭建步骤：1、见10.jpg图片；2、在项目中增加index.html文件。
# 注意：
# 1、github pages 仅支持静态网页；
# 2、仓库里只能是html文件。

# 搭建project pages 项目站点：
# 访问：https://用户名.github.io/仓库名
# 搭建步骤：
# 1、进入项目主页，点击settings；
# 2、在settings页面，点击【Launch automatic page generator】来自动生成主题页面；
# 3、新建站点基础信息设置；
# 4、选择主题；
# 5、生成网页。
